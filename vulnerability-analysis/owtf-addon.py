#!/usr/bin/env python
#####################################
# Installation module for owtf
#####################################

# AUTHOR OF MODULE NAME
AUTHOR="spinfoo"

# DESCRIPTION OF THE MODULE
DESCRIPTION="This module will install/update OWASP OWTF"

# INSTALL TYPE GIT, SVN, FILE DOWNLOAD
# OPTIONS = GIT, SVN, FILE
INSTALL_TYPE="GIT"

# LOCATION OF THE FILE OR GIT/SVN REPOSITORY
REPOSITORY_LOCATION="https://github.com/owtf/owtf.git"

# WHERE DO YOU WANT TO INSTALL IT
INSTALL_LOCATION="owtf"

# DEPENDS FOR DEBIAN INSTALLS
DEBIAN="git,postgresql,libcurl4-openssl-dev,libssl-dev,libpq-dev"

# DEPENDS FOR FEDORA INSTALLS
FEDORA="git,postgresql,libcurl4-openssl-dev,libssl-dev,libpq-dev"

# THIS WILL STILL RUN AFTER COMMANDS EVEN IF ITS ALREADY INSTALLED. USEFUL FOR FILE UPDATES AND WHEN NOT USING GIT OR OTHER APPLICATIONS THAT NEEDS AFTER COMMANDS EACH TIME
BYPASS_UPDATE="YES"

# COMMANDS TO RUN AFTER
# The current installation from source is buggy and broken. Installation disabled until the source gets cleaned up and fixed.
# IMPORTANT: Installation from source uses a Python virtual environment, so no need to arrange this yourself.
# Rought installation steps: cd {INSTALL_LOCATION}, sudo systemctl enable postgresql, sudo /etc/init.d/postgresql start, sudo chmod +x {INSTALL_LOCATION}scripts/db_setup.sh, sudo bash {INSTALL_LOCATION}scripts/db_setup.sh, sudo python3 setup.py develop, sudo make setup-web (or: sudo make setup)
AFTER_COMMANDS=""

# See {INSTALL_LOCATION}/owtf/settings.py for DB connection settings

# THIS WILL CREATE AN AUTOMATIC LAUNCHER FOR THE TOOL
# sudo owtf, xdg-open http://localhost:8009
LAUNCHER=""

# PREREQ INSTALL MODULES NEEDED FOR THIS TOOL TO WORK PROPERLY
TOOL_DEPEND=""
